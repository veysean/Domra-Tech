import { useEffect, useState, useRef } from "react";
import { CategoryServices } from "../../api";
import { FiMenu, FiX } from "react-icons/fi";

export default function Categories() {

    const [categories, setCategories] = useState([]);
    const [activeCategory, setActiveCategory] = useState("Categories");
    const [openCat, setOpenCat] = useState(false);
    const dropdownRef = useRef(null);

    const toggleCategory = () => setOpenCat((prev) => !prev);

    useEffect(() => {
        const fetchCategories = async () => {
        try {
            const res = await CategoryServices.findAll();
            setCategories(res.data || []); 
        } catch (err) {
            console.error("Failed to fetch categories:", err);
        }
        };

        fetchCategories();
    }, []);

    useEffect(() => {
        const handleClickOutside = (event) => {
        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
            setOpenCat(false); 
        }
        };
        document.addEventListener("mousedown", handleClickOutside);
        return () => document.removeEventListener("mousedown", handleClickOutside);
    }, []);

    const getCategoryIcon = (categoryName, isActive) => {
        const iconColor = isActive ? "white" : "#4A5568";

        const categoryIcons = {
            'Data Science': (
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10 13.5C10 13.7761 10.2239 14 10.5 14H11.5C11.7761 14 12 13.7761 12 13.5V7.5C12 7.22386 11.7761 7 11.5 7H10.5C10.2239 7 10 7.22386 10 7.5V13.5Z" fill={iconColor}/>
                    <path d="M7.5 14C7.22386 14 7 13.7761 7 13.5V9.5C7 9.22386 7.22386 9 7.5 9H8.5C8.77614 9 9 9.22386 9 9.5V13.5C9 13.7761 8.77614 14 8.5 14H7.5Z" fill={iconColor}/>
                    <path d="M4.5 14C4.22386 14 4 13.7761 4 13.5V11.5C4 11.2239 4.22386 11 4.5 11H5.5C5.77614 11 6 11.2239 6 11.5V13.5C6 13.7761 5.77614 14 5.5 14H4.5Z" fill={iconColor}/>
                    <path d="M14 14V4.5L9.5 0H4C2.89543 0 2 0.89543 2 2V14C2 15.1046 2.89543 16 4 16H12C13.1046 16 14 15.1046 14 14ZM9.5 3C9.5 3.82843 10.1716 4.5 11 4.5H13V14C13 14.5523 12.5523 15 12 15H4C3.44772 15 3 14.5523 3 14V2C3 1.44772 3.44772 1 4 1H9.5V3Z" fill={iconColor}/>
                </svg>
            ),
            'Computer Science': (
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1.5 0C0.671573 0 0 0.671573 0 1.5V8.5C0 9.32843 0.671573 10 1.5 10H6V11H1C0.447715 11 0 11.4477 0 12V15C0 15.5523 0.447715 16 1 16H15C15.5523 16 16 15.5523 16 15V12C16 11.4477 15.5523 11 15 11H10V10H14.5C15.3284 10 16 9.32843 16 8.5V1.5C16 0.671573 15.3284 0 14.5 0H1.5ZM1.5 1H14.5C14.7761 1 15 1.22386 15 1.5V8.5C15 8.77614 14.7761 9 14.5 9H1.5C1.22386 9 1 8.77614 1 8.5V1.5C1 1.22386 1.22386 1 1.5 1ZM12 12.5C12 12.2239 12.2239 12 12.5 12C12.7761 12 13 12.2239 13 12.5C13 12.7761 12.7761 13 12.5 13C12.2239 13 12 12.7761 12 12.5ZM14 12.5C14 12.2239 14.2239 12 14.5 12C14.7761 12 15 12.2239 15 12.5C15 12.7761 14.7761 13 14.5 13C14.2239 13 14 12.7761 14 12.5ZM1.5 12H6.5C6.77614 12 7 12.2239 7 12.5C7 12.7761 6.77614 13 6.5 13H1.5C1.22386 13 1 12.7761 1 12.5C1 12.2239 1.22386 12 1.5 12ZM1 14.25C1 14.1119 1.11193 14 1.25 14H6.75C6.88807 14 7 14.1119 7 14.25C7 14.3881 6.88807 14.5 6.75 14.5H1.25C1.11193 14.5 1 14.3881 1 14.25Z" fill={iconColor}/>
                </svg>
            ),
            'Programming': (
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10.4779 1.64705C10.5591 1.38312 10.411 1.10333 10.1471 1.02212C9.88312 0.940912 9.60333 1.08904 9.52212 1.35297L5.52212 14.353C5.44091 14.6169 5.58904 14.8967 5.85297 14.9779C6.1169 15.0591 6.39669 14.911 6.4779 14.6471L10.4779 1.64705Z" fill={iconColor}/>
                    <path d="M4.85355 4.14645C5.04882 4.34171 5.04882 4.65829 4.85355 4.85355L1.70711 8L4.85355 11.1464C5.04882 11.3417 5.04882 11.6583 4.85355 11.8536C4.65829 12.0488 4.34171 12.0488 4.14645 11.8536L0.646447 8.35355C0.451184 8.15829 0.451184 7.84171 0.646447 7.64645L4.14645 4.14645C4.34171 3.95118 4.65829 3.95118 4.85355 4.14645Z" fill={iconColor}/>
                    <path d="M11.1464 4.14645C10.9512 4.34171 10.9512 4.65829 11.1464 4.85355L14.2929 8L11.1464 11.1464C10.9512 11.3417 10.9512 11.6583 11.1464 11.8536C11.3417 12.0488 11.6583 12.0488 11.8536 11.8536L15.3536 8.35355C15.5488 8.15829 15.5488 7.84171 15.3536 7.64645L11.8536 4.14645C11.6583 3.95118 11.3417 3.95118 11.1464 4.14645Z" fill={iconColor}/>
                </svg>
            ),
            'Web Development': (
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6 9C6 8.72386 6.22386 8.5 6.5 8.5H9.5C9.77614 8.5 10 8.72386 10 9C10 9.27614 9.77614 9.5 9.5 9.5H6.5C6.22386 9.5 6 9.27614 6 9Z" fill={iconColor}/>
                    <path d="M3.85355 4.14645C3.65829 3.95118 3.34171 3.95118 3.14645 4.14645C2.95118 4.34171 2.95118 4.65829 3.14645 4.85355L4.79289 6.5L3.14645 8.14645C2.95118 8.34171 2.95118 8.65829 3.14645 8.85355C3.34171 9.04882 3.65829 9.04882 3.85355 8.85355L5.85355 6.85355C6.04882 6.65829 6.04882 6.34171 5.85355 6.14645L3.85355 4.14645Z" fill={iconColor}/>
                    <path d="M2 1C0.895431 1 0 1.89543 0 3V13C0 14.1046 0.895431 15 2 15H14C15.1046 15 16 14.1046 16 13V3C16 1.89543 15.1046 1 14 1H2ZM14 2C14.5523 2 15 2.44772 15 3V13C15 13.5523 14.5523 14 14 14H2C1.44772 14 1 13.5523 1 13V3C1 2.44772 1.44772 2 2 2H14Z" fill={iconColor}/>
                </svg>
            ),
            'Artificial intelligence (AI)': (
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6 12.5C6 12.2239 6.22386 12 6.5 12H9.5C9.77614 12 10 12.2239 10 12.5C10 12.7761 9.77614 13 9.5 13H6.5C6.22386 13 6 12.7761 6 12.5Z" fill={iconColor}/>
                    <path d="M3 8.06155C3 6.76041 4.23471 5.76462 5.53019 5.88584C6.23775 5.95205 7.07092 6 8 6C8.92908 6 9.76225 5.95205 10.4698 5.88584C11.7653 5.76462 13 6.76041 13 8.06155V9.21922C13 9.67809 12.6875 10.075 12.2354 10.1536C11.3904 10.3006 9.8946 10.5 8 10.5C6.1054 10.5 4.60964 10.3006 3.76458 10.1536C3.3125 10.075 3 9.67809 3 9.21922V8.06155ZM7.54195 7.23501C7.46308 7.22158 7.38255 7.24672 7.32532 7.30262L6.40429 8.20222C5.67721 8.15847 5.04611 8.09004 4.53396 8.01982C4.39717 8.00107 4.27107 8.09676 4.25232 8.23355C4.23356 8.37034 4.32925 8.49643 4.46604 8.51519C5.01572 8.59055 5.69797 8.6637 6.48603 8.7078C6.55606 8.71172 6.62451 8.68605 6.67468 8.63704L7.42865 7.90061L8.27598 9.61099C8.31213 9.68395 8.38155 9.73474 8.46203 9.74711C8.54251 9.75947 8.62397 9.73187 8.68036 9.67313L9.6124 8.70211C10.3589 8.65757 11.0073 8.58739 11.534 8.51519C11.6707 8.49643 11.7664 8.37034 11.7477 8.23355C11.7289 8.09676 11.6028 8.00107 11.466 8.01982C10.9283 8.09354 10.2594 8.16531 9.48603 8.20859C9.42289 8.21212 9.36343 8.23945 9.31964 8.28508L8.56605 9.07017L7.72402 7.37048C7.6885 7.29879 7.62082 7.24843 7.54195 7.23501Z" fill={iconColor}/>
                    <path d="M8.5 1.86622C8.7989 1.69331 9 1.37014 9 1C9 0.447715 8.55229 0 8 0C7.44772 0 7 0.447715 7 1C7 1.37014 7.2011 1.69331 7.5 1.86622V3H5.5C3.01472 3 1 5.01472 1 7.5V8C0.447715 8 0 8.44771 0 9V11C0 11.5523 0.447715 12 1 12V13C1 14.1046 1.89543 15 3 15H13C14.1046 15 15 14.1046 15 13V12C15.5523 12 16 11.5523 16 11V9C16 8.44771 15.5523 8 15 8V7.5C15 5.01472 12.9853 3 10.5 3H8.5V1.86622ZM14 7.5V13C14 13.5523 13.5523 14 13 14H3C2.44772 14 2 13.5523 2 13V7.5C2 5.567 3.567 4 5.5 4H10.5C12.433 4 14 5.567 14 7.5Z" fill={iconColor}/>
                </svg>
            ),
            'Machine learning': (
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clipPath="url(#clip0_827_676)">
                    <path d="M5 0C5.13261 0 5.25979 0.0526784 5.35355 0.146447C5.44732 0.240215 5.5 0.367392 5.5 0.5V2H6.5V0.5C6.5 0.367392 6.55268 0.240215 6.64645 0.146447C6.74021 0.0526784 6.86739 0 7 0C7.13261 0 7.25979 0.0526784 7.35355 0.146447C7.44732 0.240215 7.5 0.367392 7.5 0.5V2H8.5V0.5C8.5 0.367392 8.55268 0.240215 8.64645 0.146447C8.74021 0.0526784 8.86739 0 9 0C9.13261 0 9.25979 0.0526784 9.35355 0.146447C9.44732 0.240215 9.5 0.367392 9.5 0.5V2H10.5V0.5C10.5 0.367392 10.5527 0.240215 10.6464 0.146447C10.7402 0.0526784 10.8674 0 11 0C11.1326 0 11.2598 0.0526784 11.3536 0.146447C11.4473 0.240215 11.5 0.367392 11.5 0.5V2C12.163 2 12.7989 2.26339 13.2678 2.73223C13.7366 3.20107 14 3.83696 14 4.5H15.5C15.6326 4.5 15.7598 4.55268 15.8536 4.64645C15.9473 4.74021 16 4.86739 16 5C16 5.13261 15.9473 5.25979 15.8536 5.35355C15.7598 5.44732 15.6326 5.5 15.5 5.5H14V6.5H15.5C15.6326 6.5 15.7598 6.55268 15.8536 6.64645C15.9473 6.74021 16 6.86739 16 7C16 7.13261 15.9473 7.25979 15.8536 7.35355C15.7598 7.44732 15.6326 7.5 15.5 7.5H14V8.5H15.5C15.6326 8.5 15.7598 8.55268 15.8536 8.64645C15.9473 8.74021 16 8.86739 16 9C16 9.13261 15.9473 9.25979 15.8536 9.35355C15.7598 9.44732 15.6326 9.5 15.5 9.5H14V10.5H15.5C15.6326 10.5 15.7598 10.5527 15.8536 10.6464C15.9473 10.7402 16 10.8674 16 11C16 11.1326 15.9473 11.2598 15.8536 11.3536C15.7598 11.4473 15.6326 11.5 15.5 11.5H14C14 12.163 13.7366 12.7989 13.2678 13.2678C12.7989 13.7366 12.163 14 11.5 14V15.5C11.5 15.6326 11.4473 15.7598 11.3536 15.8536C11.2598 15.9473 11.1326 16 11 16C10.8674 16 10.7402 15.9473 10.6464 15.8536C10.5527 15.7598 10.5 15.6326 10.5 15.5V14H9.5V15.5C9.5 15.6326 9.44732 15.7598 9.35355 15.8536C9.25979 15.9473 9.13261 16 9 16C8.86739 16 8.74021 15.9473 8.64645 15.8536C8.55268 15.7598 8.5 15.6326 8.5 15.5V14H7.5V15.5C7.5 15.6326 7.44732 15.7598 7.35355 15.8536C7.25979 15.9473 7.13261 16 7 16C6.86739 16 6.74021 15.9473 6.64645 15.8536C6.55268 15.7598 6.5 15.6326 6.5 15.5V14H5.5V15.5C5.5 15.6326 5.44732 15.7598 5.35355 15.8536C5.25979 15.9473 5.13261 16 5 16C4.86739 16 4.74021 15.9473 4.64645 15.8536C4.55268 15.7598 4.5 15.6326 4.5 15.5V14C3.83696 14 3.20107 13.7366 2.73223 13.2678C2.26339 12.7989 2 12.163 2 11.5H0.5C0.367392 11.5 0.240215 11.4473 0.146447 11.3536C0.0526784 11.2598 0 11.1326 0 11C0 10.8674 0.0526784 10.7402 0.146447 10.6464C0.240215 10.5527 0.367392 10.5 0.5 10.5H2V9.5H0.5C0.367392 9.5 0.240215 9.44732 0.146447 9.35355C0.0526784 9.25979 0 9.13261 0 9C0 8.86739 0.0526784 8.74021 0.146447 8.64645C0.240215 8.55268 0.367392 8.5 0.5 8.5H2V7.5H0.5C0.367392 7.5 0.240215 7.44732 0.146447 7.35355C0.0526784 7.25979 0 7.13261 0 7C0 6.86739 0.0526784 6.74021 0.146447 6.64645C0.240215 6.55268 0.367392 6.5 0.5 6.5H2V5.5H0.5C0.367392 5.5 0.240215 5.44732 0.146447 5.35355C0.0526784 5.25979 0 5.13261 0 5C0 4.86739 0.0526784 4.74021 0.146447 4.64645C0.240215 4.55268 0.367392 4.5 0.5 4.5H2C2 3.83696 2.26339 3.20107 2.73223 2.73223C3.20107 2.26339 3.83696 2 4.5 2V0.5C4.5 0.367392 4.55268 0.240215 4.64645 0.146447C4.74021 0.0526784 4.86739 0 5 0ZM4.5 3C4.10218 3 3.72064 3.15804 3.43934 3.43934C3.15804 3.72064 3 4.10218 3 4.5V11.5C3 11.8978 3.15804 12.2794 3.43934 12.5607C3.72064 12.842 4.10218 13 4.5 13H11.5C11.8978 13 12.2794 12.842 12.5607 12.5607C12.842 12.2794 13 11.8978 13 11.5V4.5C13 4.10218 12.842 3.72064 12.5607 3.43934C12.2794 3.15804 11.8978 3 11.5 3H4.5ZM5 6.5C5 6.10218 5.15804 5.72064 5.43934 5.43934C5.72064 5.15804 6.10218 5 6.5 5H9.5C9.89782 5 10.2794 5.15804 10.5607 5.43934C10.842 5.72064 11 6.10218 11 6.5V9.5C11 9.89782 10.842 10.2794 10.5607 10.5607C10.2794 10.842 9.89782 11 9.5 11H6.5C6.10218 11 5.72064 10.842 5.43934 10.5607C5.15804 10.2794 5 9.89782 5 9.5V6.5ZM6.5 6C6.36739 6 6.24021 6.05268 6.14645 6.14645C6.05268 6.24021 6 6.36739 6 6.5V9.5C6 9.63261 6.05268 9.75979 6.14645 9.85355C6.24021 9.94732 6.36739 10 6.5 10H9.5C9.63261 10 9.75979 9.94732 9.85355 9.85355C9.94732 9.75979 10 9.63261 10 9.5V6.5C10 6.36739 9.94732 6.24021 9.85355 6.14645C9.75979 6.05268 9.63261 6 9.5 6H6.5Z" fill={iconColor}/>
                    </g>
                    <defs>
                    <clipPath id="clip0_827_676">
                    <rect width="16" height="16" fill="white"/>
                    </clipPath>
                    </defs>
                </svg>
            ),
            'General': (
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clipPath="url(#clip0_821_678)">
                    <path d="M8 4.75403C7.57373 4.75403 7.15163 4.83799 6.75781 5.00112C6.36398 5.16424 6.00615 5.40334 5.70473 5.70476C5.40331 6.00618 5.16421 6.36401 5.00109 6.75784C4.83796 7.15166 4.754 7.57376 4.754 8.00003C4.754 8.4263 4.83796 8.8484 5.00109 9.24222C5.16421 9.63604 5.40331 9.99388 5.70473 10.2953C6.00615 10.5967 6.36398 10.8358 6.75781 10.9989C7.15163 11.1621 7.57373 11.246 8 11.246C8.86089 11.246 9.68652 10.904 10.2953 10.2953C10.904 9.68655 11.246 8.86092 11.246 8.00003C11.246 7.13914 10.904 6.3135 10.2953 5.70476C9.68652 5.09602 8.86089 4.75403 8 4.75403ZM5.754 8.00003C5.754 7.40435 5.99063 6.83307 6.41184 6.41187C6.83304 5.99066 7.40432 5.75403 8 5.75403C8.59567 5.75403 9.16695 5.99066 9.58816 6.41187C10.0094 6.83307 10.246 7.40435 10.246 8.00003C10.246 8.5957 10.0094 9.16698 9.58816 9.58819C9.16695 10.0094 8.59567 10.246 8 10.246C7.40432 10.246 6.83304 10.0094 6.41184 9.58819C5.99063 9.16698 5.754 8.5957 5.754 8.00003Z" fill={iconColor}/>
                    <path d="M9.79599 1.34299C9.26899 -0.447012 6.73099 -0.447012 6.20399 1.34299L6.10999 1.66199C6.07318 1.78694 6.00889 1.90207 5.9218 1.99895C5.83472 2.09582 5.72707 2.17198 5.60673 2.22184C5.48639 2.2717 5.35642 2.294 5.22634 2.28711C5.09627 2.28021 4.96938 2.24429 4.85499 2.18199L4.56299 2.02199C2.92299 1.12999 1.12999 2.92399 2.02299 4.56299L2.18199 4.85499C2.24429 4.96938 2.28021 5.09627 2.28711 5.22634C2.294 5.35642 2.2717 5.48639 2.22184 5.60673C2.17198 5.72707 2.09582 5.83472 1.99895 5.9218C1.90207 6.00889 1.78694 6.07318 1.66199 6.10999L1.34299 6.20399C-0.447012 6.73099 -0.447012 9.26899 1.34299 9.79599L1.66199 9.88999C1.78694 9.92679 1.90207 9.99109 1.99895 10.0782C2.09582 10.1653 2.17198 10.2729 2.22184 10.3932C2.2717 10.5136 2.294 10.6436 2.28711 10.7736C2.28021 10.9037 2.24429 11.0306 2.18199 11.145L2.02199 11.437C1.12999 13.077 2.92299 14.871 4.56299 13.977L4.85499 13.818C4.96938 13.7557 5.09627 13.7198 5.22634 13.7129C5.35642 13.706 5.48639 13.7283 5.60673 13.7781C5.72707 13.828 5.83472 13.9042 5.9218 14.001C6.00889 14.0979 6.07318 14.213 6.10999 14.338L6.20399 14.657C6.73099 16.447 9.26899 16.447 9.79599 14.657L9.88999 14.338C9.92679 14.213 9.99109 14.0979 10.0782 14.001C10.1653 13.9042 10.2729 13.828 10.3932 13.7781C10.5136 13.7283 10.6436 13.706 10.7736 13.7129C10.9037 13.7198 11.0306 13.7557 11.145 13.818L11.437 13.978C13.077 14.871 14.871 13.076 13.977 11.437L13.818 11.145C13.7557 11.0306 13.7198 10.9037 13.7129 10.7736C13.706 10.6436 13.7283 10.5136 13.7781 10.3932C13.828 10.2729 13.9042 10.1653 14.001 10.0782C14.0979 9.99109 14.213 9.92679 14.338 9.88999L14.657 9.79599C16.447 9.26899 16.447 6.73099 14.657 6.20399L14.338 6.10999C14.213 6.07318 14.0979 6.00889 14.001 5.9218C13.9042 5.83472 13.828 5.72707 13.7781 5.60673C13.7283 5.48639 13.706 5.35642 13.7129 5.22634C13.7198 5.09627 13.7557 4.96938 13.818 4.85499L13.978 4.56299C14.871 2.92299 13.076 1.12999 11.437 2.02299L11.145 2.18199C11.0306 2.24429 10.9037 2.28021 10.7736 2.28711C10.6436 2.294 10.5136 2.2717 10.3932 2.22184C10.2729 2.17198 10.1653 2.09582 10.0782 1.99895C9.99109 1.90207 9.92679 1.78694 9.88999 1.66199L9.79599 1.34299ZM7.16299 1.62599C7.40899 0.790988 8.59099 0.790988 8.83699 1.62599L8.93099 1.94499C9.01001 2.21307 9.14802 2.46008 9.33491 2.66789C9.5218 2.8757 9.75283 3.03905 10.0111 3.14597C10.2693 3.25288 10.5482 3.30066 10.8273 3.28578C11.1064 3.2709 11.3786 3.19375 11.624 3.05999L11.915 2.89999C12.679 2.48499 13.515 3.31999 13.099 4.08499L12.94 4.37699C12.8064 4.62241 12.7295 4.89462 12.7147 5.17364C12.7 5.45267 12.7479 5.73146 12.8549 5.98957C12.9619 6.24769 13.1253 6.47859 13.3332 6.66536C13.541 6.85214 13.788 6.99005 14.056 7.06899L14.374 7.16299C15.209 7.40899 15.209 8.59099 14.374 8.83699L14.055 8.93099C13.7869 9.01001 13.5399 9.14802 13.3321 9.33491C13.1243 9.5218 12.9609 9.75283 12.854 10.0111C12.7471 10.2693 12.6993 10.5482 12.7142 10.8273C12.7291 11.1064 12.8062 11.3786 12.94 11.624L13.1 11.915C13.515 12.679 12.68 13.515 11.915 13.099L11.624 12.94C11.3785 12.8062 11.1062 12.7291 10.8271 12.7143C10.5479 12.6995 10.269 12.7474 10.0108 12.8544C9.75253 12.9614 9.52151 13.1249 9.33467 13.3328C9.14783 13.5407 9.00989 13.7878 8.93099 14.056L8.83699 14.374C8.59099 15.209 7.40899 15.209 7.16299 14.374L7.06899 14.055C6.98993 13.787 6.85194 13.5402 6.66512 13.3325C6.4783 13.1248 6.24738 12.9615 5.98928 12.8546C5.73118 12.7477 5.45243 12.6999 5.17346 12.7146C4.89448 12.7294 4.62235 12.8064 4.37699 12.94L4.08499 13.1C3.32099 13.515 2.48499 12.68 2.90099 11.915L3.05999 11.624C3.19394 11.3785 3.27124 11.1062 3.28621 10.827C3.30119 10.5478 3.25346 10.2688 3.14653 10.0104C3.0396 9.75207 2.87618 9.52093 2.66827 9.33397C2.46035 9.14701 2.21321 9.00897 1.94499 8.92999L1.62599 8.83599C0.790988 8.58999 0.790988 7.40799 1.62599 7.16199L1.94499 7.06799C2.21279 6.9889 2.45953 6.85093 2.66713 6.66418C2.87473 6.47742 3.03795 6.24662 3.14484 5.98864C3.25173 5.73067 3.29959 5.45206 3.2849 5.17321C3.27022 4.89435 3.19338 4.62231 3.05999 4.37699L2.89999 4.08499C2.48499 3.32099 3.31999 2.48499 4.08499 2.90099L4.37699 3.05999C4.62235 3.19356 4.89448 3.27056 5.17346 3.28534C5.45243 3.30012 5.73118 3.25231 5.98928 3.1454C6.24738 3.0385 6.4783 2.87522 6.66512 2.66751C6.85194 2.4598 6.98993 2.21293 7.06899 1.94499L7.16299 1.62599Z" fill={iconColor}/>
                    </g>
                    <defs>
                    <clipPath id="clip0_821_678">
                    <rect width="16" height="16" fill="white"/>
                    </clipPath>
                    </defs>
                </svg>
            ),

        };

    
        return categoryIcons[categoryName];
    };

    return (
        <div className="w-[1076px] self-stretch inline-flex flex-col justify-start items-start gap-5">
            <div className="p-0.5 lg:p-2.5 inline-flex justify-center items-center gap-2.5">
                <div className="justify-start text-slate-600 text-sm lg:text-base font-bold font-['Inter']">Filter by  category</div>
                 <div className="lg:hidden" ref={dropdownRef}>

                <button
                    onClick={toggleCategory}
                    className="text-[#667EEA]"
                >
                    {openCat ? <div className="text-[#667EEA] font-bold">
                                    <svg width="14" height="8" viewBox="0 0 14 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M1 1C2.91168 2.74775 4.87954 4.25225 6.79122 6L13 1.3125" stroke="#4A5568" stroke-width="2" stroke-linecap="round"/>
                                    </svg>
                                </div>: <div className="w-[19px]">
                                    <svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M1 1C2.95262 3.34315 4.04738 4.65685 6 7L1 13" stroke="#4A5568" stroke-width="2" stroke-linecap="round"/>
                                    </svg>
                                </div>}
                </button>
                {/* Dropdown list */}
                {openCat && (
                <ul className="absolute mt-2 w-64 bg-white shadow-lg rounded-lg p-2 z-10">
                    {/* "All Category" option */}
                    <li
                        onClick={() => {
                        setActiveCategory("All Category");
                        }}
                        className={`flex items-center gap-2 px-3 py-2 rounded-md cursor-pointer transition  ${
                        activeCategory === "All Category" ? "bg-[#667EEA] text-white" : "hover:bg-gray-100 text-gray-700"
                        }`}
                    >
                        All Category
                    </li>

                    {/* Other categories from API */}
                    {categories.map((cat) => {
                    const isActive = activeCategory === cat.categoryName;
                    return (
                        <li
                        key={cat.categoryId}
                        onClick={() => {
                            setActiveCategory(cat.categoryName);
                            
                        }}
                        className={`flex items-center gap-2 px-3 py-2 rounded-md cursor-pointer transition 
                            ${isActive ? "bg-[#667EEA] text-white" : "hover:bg-gray-100 text-gray-700"}`}
                        >
                        {getCategoryIcon(cat.categoryName, isActive)}
                        <span>{cat.categoryName}</span>
                        </li>
                    );
                    })}
                </ul>
                )}
            </div>
            </div>
            <div className="self-stretch inline-flex justify-start items-start gap-7 flex-wrap content-start">
                <div className="w-full flex justify-start items-start gap-7 flex-wrap content-start">
                    {/* Static "Categories" button */}
                    <button 
                        onClick={() => setActiveCategory("Categories")}
                        className={`hidden h-10 px-2.5 py-5 bg-[#6677EA] rounded-[20px] outline-1 outline-offset-[-1px] outline-slate-200 lg:flex justify-center items-center gap-2.5 hover:shadow-[0px_3px_3px_0px_rgba(0,0,0,0.20)]
                        ${
                            activeCategory === "Categories"
                            ? "bg-[#6677EA] text-white"
                            : "bg-transparent text-slate-600 hover:bg-[#F1F5F9]"
                        }`}>
                        <div className="w-4 h-4 relative">
                            <div className="w-4 h-4 left-0 top-0 absolute">
                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M1.5 0C0.671573 0 0 0.671573 0 1.5V13C0 13.5523 0.447715 14 1 14V1.5C1 1.22386 1.22386 1 1.5 1H14C14 0.447715 13.5523 0 13 0H1.5Z" fill={activeCategory === "Categories" ? "white" : "#4A5568"}/>
                                    <path d="M3.5 2C2.67157 2 2 2.67157 2 3.5V14.5C2 15.3284 2.67157 16 3.5 16H9.58579C9.98361 16 10.3651 15.842 10.6464 15.5607L15.5607 10.6464C15.842 10.3651 16 9.98361 16 9.58579V3.5C16 2.67157 15.3284 2 14.5 2H3.5ZM3 3.5C3 3.22386 3.22386 3 3.5 3H14.5C14.7761 3 15 3.22386 15 3.5V9H10.5C9.67157 9 9 9.67157 9 10.5V15H3.5C3.22386 15 3 14.7761 3 14.5V3.5ZM10 14.7929V10.5C10 10.2239 10.2239 10 10.5 10H14.7929L10 14.7929Z" fill={activeCategory === "Categories" ? "white" : "#4A5568"}/>
                                </svg>
                            </div>
                        </div>
                        <div className="justify-start text-base font-medium font-['Inter']">All Categories</div>
                    </button>
                    {/* Category button */}
                    {categories.map((cat) =>  {
                    const isActive = activeCategory === cat.categoryName;
                    return (
                        <button 
                            key={cat.categoryId}
                            onClick={() => setActiveCategory(cat.categoryName)}
                            className={`hidden h-10 px-2.5 py-5 rounded-[20px] outline-1 outline-offset-[-1px] outline-slate-200 lg:flex justify-center items-center gap-2.5 hover:shadow-[0px_3px_3px_0px_rgba(0,0,0,0.20)]
                            ${
                                isActive
                                ? "bg-[#6677EA] text-white"
                                : "bg-transparent text-slate-600 hover:bg-[#F1F5F9]"
                            }`}>
                            <div className="w-4 h-4 relative">
                                <div className="w-4 h-3.5 left-0 top-0 absolute">
                                    {getCategoryIcon(cat.categoryName, isActive)}
                                </div>
                            </div>
                            <div className="justify-start text-base font-medium font-['Inter']">
                                {cat.categoryName}
                            </div>
                        </button>
                    );
                })}
                </div>
            </div>
        </div>
    );
}